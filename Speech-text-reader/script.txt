const main = document.querySelector("main");
const voicesSelect = document.getElementById("voices");
const textarea = document.getElementById("text");
const readBtn = document.getElementById("read");
const toggleBtn = document.getElementById("toggle");
const closeBtn = document.getElementById("close");

// WE GONNA CREATE OUR ARRAY OR DATA, WITH IMAG AND TEXT
const data = [
  {
    image: "./img/drink.jpg",
    text: "I'm Thirsty",
  },
  {
    image: "./img/food.jpg",
    text: "I'm Hungry",
  },
  {
    image: "./img/tired.jpg",
    text: "I'm Tired",
  },
  {
    image: "./img/hurt.jpg",
    text: "I'm Hurt",
  },
  {
    image: "./img/happy.jpg",
    text: "I'm Happy",
  },
  {
    image: "./img/angry.jpg",
    text: "I'm Angry",
  },
  {
    image: "./img/sad.jpg",
    text: "I'm Sad",
  },
  {
    image: "./img/scared.jpg",
    text: "I'm Scared",
  },
  {
    image: "./img/outside.jpg",
    text: "I Want To Go Outside",
  },
  {
    image: "./img/home.jpg",
    text: "I Want To Go Home",
  },
  {
    image: "./img/school.jpg",
    text: "I Want To Go To School",
  },
  {
    image: "./img/grandma.jpg",
    text: "I Want To Go To Grandmas",
  },
];

// LOOP THROUGHT IT

data.forEach(createBox);

// Create speech boxes
function createBox(item) {
  // is looping throught of our array is out putting out img and text value
  // console.log(item);

  // create and element div
  const box = document.createElement("div");
  // now we want to get access to our img and text
  // item.image item.text, but we gonna use something called (DSTRUCTURING)
  // TO pull up the image and text from the item
  // insted of using item.image and item.text
  const { image, text } = item;

  //
  box.classList.add("box");
  box.innerHTML = `
  <img src="${image}" alt ="${text}"/> 
  <p class="info">${text}</p>
  `;

  // @todo -speak event
  box.addEventListener("click", () => {
    // set the text function with our (text) form our array
    setTextMessage(text);
    //speak the text
    speakText();

    //add active effect (our class .active)
    box.classList.add("active");
    //and we want to set a time out to remove the class
    setTimeout(() => box.classList.remove("active"), 800);
  });

  // Init speech synth
  const message = new SpeechSynthesisUtterance();

  // we want to use our main and append to that
  main.appendChild(box);
}
// Store voices
let voices = [];

function getVoices() {
  voices = speechSynthesis.getVoices();

  voices.forEach((voice) => {
    const option = document.createElement("option");

    option.value = voice.name;
    option.innerText = `${voice.name} ${voice.lang}`;

    voicesSelect.appendChild(option);
  });
}

function setTextMessage(text) {
  message.text = text;
}
// Speak text
function speakText() {
  speechSynthesis.speak(message);
}

// Voices changed
speechSynthesis.addEventListener("voiceschanged", getVoices);

// close btn text box
toggleBtn.addEventListener("click", () =>
  document.getElementById("text-box").classList.toggle("show")
);
//close it with the X
closeBtn.addEventListener("click", () =>
  document.getElementById("text-box").classList.remove("show")
);

getVoices();
